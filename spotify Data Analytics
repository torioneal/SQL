--For this project, I downloaded Spotify data from Kaggle
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL.

--Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then I inserted the Spotify Data .csv into the table

--Next, I explored the data using the following SQL
select * 
from BIT_DB.Spotifydata;

--What is the average danceability by artist? 
select artist_name, avg(danceability) 
from BIT_DB.Spotifydata
group by artist_name;

--and track?
select track_id, avg(danceability)
from BIT_DB.Spotifydata
group by track_id;

--Who are the top 10 artists based on popularity?
select artist_name, avg(popularity) as avg_pop
from BIT_DB.Spotifydata
group by artist_name
order by avg_pop desc
limit 10;

--What artist released the longest song?
select distinct artist_name, duration_ms
from BIT_DB.Spotifydata
group by artist_name
order by duration_ms desc
limit 1;

--What's the average danceability for the 10 most popular songs? 
select track_name, avg(danceability)
from BIT_DB.Spotifydata
group by track_name
order by popularity desc
limit 10;

--Who are the top ten artists based on energy?
select artist_name, avg(energy) as avg_energy
from BIT_DB.Spotifydata
group by artist_name
order by avg_energy desc
limit 10;

--which artist has the most songs in the top 50 on this list and how many songs do they have on the list?
select distinct artist_name, count(track_name) as num_songs
from BIT_DB.Spotifydata
group by artist_name
order by num_songs desc
limit 1;

--How many songs does Lil Nas X have on this list?
select artist_name, count(track_name)
from BIT_DB.Spotifydata
where artist_name = 'Lil Nas X';

--Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
with Avg_Popularity_CTE as (
    select s.artist_name, avg(s.popularity) as avg_pop
    from Spotifydata s
    group by s.artist_name)
    select artist_name, avg_pop, 'Top Star' as tag
    from Avg_Popularity_CTE 
    where avg_pop >= 90;
